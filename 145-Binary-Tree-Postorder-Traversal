# Question url:
# https://leetcode.com/problems/binary-tree-postorder-traversal/description/


# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None


class Solution_revised_recursive:
    def postorderTraversal(self, root):
        if root is None:
            return []
        return self.postorderTraversal(root.left) + \
            self.postorderTraversal(root.right) + [root.val]


class Solution_initial_recursive:
    def postorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        postorder = []

        def post(root):
            if root is None:
                return None
            post(root.left)
            post(root.right)
            postorder.append(root.val)

        post(root)
        return postorder
