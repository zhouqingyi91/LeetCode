# Question url:
# https://leetcode.com/problems/binary-tree-preorder-traversal/description/


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution_recursion:
    def preorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        ans = []

        def travel(root):
            if root:
                ans.append(root.val)
                travel(root.left)
                travel(root.right)

        travel(root)
        return ans


class Solution_iterative:
    def preorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        stack = [root]
        ans = []
        while stack:
            node = stack.pop()
            if node:
                ans.append(node.val)
                stack.extend([node.right, node.left])

        return ans
