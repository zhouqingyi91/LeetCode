# Question url:
# https://leetcode.com/problems/word-search-ii/description/


class TrieNode():
    def __init__(self):
        self.children = {}
        self.word = ''


class Solution:
    def findWords(self, board, words):
        root = self.buildtrie(words)
        res = []
        for row in range(len(board)):
            for col in range(len(board[0])):
                self.search(board, row, col, res, root)
        return res

    def search(self, board, r, c, res, node):
        if r < 0 or r >= len(board) or c < 0 or c >= len(board[0]):
            return
        char = board[r][c]
        if char == '#' or char not in node.children:
            return
        node = node.children[char]
        if node.word:
            res.append(node.word)
            node.word = False

        board[r][c] = '#'
        for row, col in [(r + 1, c), (r - 1, c), (r, c + 1), (r, c - 1)]:
            self.search(board, row, col, res, node)
        board[r][c] = char

    def buildtrie(self, words):
        root = TrieNode()
        for word in words:
            node = root
            for c in word:
                if c not in node.children:
                    node.children[c] = TrieNode()
                node = node.children[c]
            node.word = word
        return root
