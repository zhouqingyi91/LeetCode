# Question url:
# https://leetcode.com/problems/path-sum/description/


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

# basically the same idea as question 257
class Solution_Recursion:
    def hasPathSum(self, root, target):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: bool
        """
        if root:
            # base case
            if target - root.val == 0 and root.left is None and root.right is None:
                return True
            else:  # recursive case
                return self.hasPathSum(root.left, target - root.val) or self.hasPathSum(root.right, target - root.val)
        else:
            return False
